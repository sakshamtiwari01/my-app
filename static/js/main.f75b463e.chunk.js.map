{"version":3,"sources":["Navbar.js","Form.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar1","props","react_default","a","createElement","Navbar","bg","concat","mode","expand","oppmode","Container","Brand","href","className","title","Toggle","aria-controls","Collapse","id","Nav","Link","type","role","aria-checked","onClick","togglemode","htmlFor","BasicExample","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","htmlfor","Style","mode1","value","onChange","event","target","rows","Button","newtext","toUpperCase","showalert","toLowerCase","split","join","length","Alert","alert","word","lower","charAt","slice","cap","msg","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","_useState5","_useState6","oppsetMode","_useState7","_useState8","setMode1","src_Navbar","document","body","style","backgroundColor","Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f75b463e.chunk.js","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\n\r\nfunction Navbar1(props){\r\n\r\nreturn(\r\n\r\n<Navbar bg={`${props.mode}`}  expand={`lg text-${props.oppmode}`}>\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\" className={`text-${props.oppmode}`}>{props.title}</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#\" className={`text-${props.oppmode}`}>Home</Nav.Link>\r\n            <Nav.Link href=\"#\" className={`text-${props.oppmode}`}>Link</Nav.Link>\r\n\r\n          </Nav>\r\n          <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n);\r\n\r\n}\r\n\r\nexport default Navbar1;","import Button from 'react-bootstrap/Button';\r\nimport React, {useState} from 'react'\r\n\r\nfunction BasicExample(props) {\r\n\r\n  const clicked2=()=>{\r\n    let newtext=text.split(/ \\s+ /);\r\n    setText(newtext.join(\" \"))\r\n    props.showalert(\"Extra Spaces are removed!\",\"success\");\r\n  }\r\n\r\n  const clicked=()=>{\r\n    let newtext=text.toUpperCase();\r\n    setText(newtext);\r\n    props.showalert(\"Text has converted to UpperCase!\",\"success\")\r\n  }\r\n\r\n  const clicked1=()=>{\r\n    let newtext=text.toLowerCase();\r\n    setText(newtext);\r\n    props.showalert(\"Text has converted to LowerCase!\",\"success\")\r\n  }\r\n\r\n  const onchange=(event)=>{\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text,setText]= useState('Text is entered');\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1 className={`text-${props.oppmode}`}>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <label htmlfor=\"exampleFormControlTextarea1\" className={`form-label text-${props.oppmode}`}  >TextArea</label>\r\n  <textarea Style={`background-color:${props.mode1};`} className={`form-control text-${props.oppmode}`} bg='green' id=\"exampleFormControlTextarea1\" value={text} onChange={onchange} rows=\"6\"></textarea>\r\n</div>\r\n<Button className=\"btn mx-1 my-1\" onClick={clicked}>Convert Text to Uppercase</Button>\r\n<Button className=\"btn mx-1 my-1\" onClick={clicked1}>Convert Text to Lowercase</Button>\r\n<Button className=\"btn mx-1 my-1\" onClick={clicked2}>Remove Extra Spaces</Button>\r\n\r\n  <div className=\"container my-3\">\r\n\r\n  <h1 className={`text-${props.oppmode}`}>Your Text Summary</h1>\r\n  <p className={`text-${props.oppmode}`}> {text.split(\" \").length} Words and {text.length} Characters</p>\r\n  <p className={`text-${props.oppmode}`}>{0.008*text.split(\" \").length} Minutes</p>\r\n  </div>\r\n    \r\n    </>\r\n  );\r\n}\r\nexport default BasicExample;","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const cap=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n    }\r\n\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show role=alert`}>\r\n    <strong>{cap(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport Navbar1 from './Navbar.js'\nimport Form from './Form'\nimport Alert from './Alert.js';\n\nfunction App() {\n\n  const [alert,setAlert]=useState(null);\n\n  const showalert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(()=>{\n      setAlert(null)\n    },2000);\n\n  }\n  \n  const [mode,setMode]=useState('light');\n  const [oppmode,oppsetMode]=useState('black');\n  const [mode1,setMode1]=useState('light');\n\n  function togglemode(){\n    if(mode === 'light'){\n      setMode('dark');\n      setMode1('#060727');\n      document.body.style.backgroundColor=\"#060727\";\n      showalert(\"Dark Mode has been enabled!\",\"success\");\n    }\n    else{\n      \n      setMode('light');\n      setMode1('light');\n      document.body.style.backgroundColor=\"white\";\n      showalert(\"Light Mode has been enabled!\",\"success\");\n    }\n      if(mode ==='light'){\n        oppsetMode('white');\n      }\n      else{\n        oppsetMode('black');\n      \n    }\n  \n  }\n\n  return (\n    <>\n    \n    <Navbar1 title=\"Saksham\" mode={mode} togglemode={togglemode} oppmode={oppmode} alert={alert} showalert={showalert}/>\n    <Alert alert={alert}/>\n    <div className='container my-3'>\n    <Form heading=\"Enter the text to analayze\" oppmode={oppmode} mode={mode} mode1={mode1} alert={alert} showalert={showalert}/>\n    </div>\n    </>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}